{"version":3,"sources":["messageHandler.js"],"names":["onMessage","connectedPeers","ws","message","type","onICECandidate","ICECandidate","destination","id","onOffer","offer","onAnswer","answer","onInit","init","Error","console","log","source","send"],"mappings":";;;;;;;;;;;kBAGwBA,S;;;;AAHxB;AACO,IAAMC,0CAAiB,EAAvB;;AAEQ,SAASD,SAAT,CAAoBE,EAApB,EAAwBC,OAAxB,EAAiC;AAC5C,QAAIC,OAAOD,QAAQC,IAAnB;AACA,YAAQA,IAAR;AACA,aAAK,cAAL;AACIC,2BAAeF,QAAQG,YAAvB,EAAqCH,QAAQI,WAA7C,EAA0DL,GAAGM,EAA7D;AACA;AACJ,aAAK,OAAL;AACIC,oBAAQN,QAAQO,KAAhB,EAAuBP,QAAQI,WAA/B,EAA4CL,GAAGM,EAA/C;AACA;AACJ,aAAK,QAAL;AACIG,qBAASR,QAAQS,MAAjB,EAAyBT,QAAQI,WAAjC,EAA8CL,GAAGM,EAAjD;AACA;AACJ,aAAK,MAAL;AACIK,mBAAOX,EAAP,EAAWC,QAAQW,IAAnB;AACA;AACJ;AACI,kBAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AAdJ;AAgBH;;AAED,SAASF,MAAT,CAAiBX,EAAjB,EAAqBM,EAArB,EAAyB;AACrBQ,YAAQC,GAAR,CAAY,iBAAZ,EAA+BT,EAA/B;AACAN,OAAGM,EAAH,GAAQA,EAAR;AACAP,mBAAeO,EAAf,IAAqBN,EAArB;AACH;;AAED,SAASO,OAAT,CAAkBC,KAAlB,EAAyBH,WAAzB,EAAsCW,MAAtC,EAA8C;AAC1CF,YAAQC,GAAR,CAAY,kBAAZ,EAAgCC,MAAhC,EAAwC,SAAxC,EAAmDX,WAAnD;AACAN,mBAAeM,WAAf,EAA4BY,IAA5B,CAAiC,yBAAe;AAC5Cf,cAAM,OADsC;AAE5CM,eAAOA,KAFqC;AAG5CQ,gBAAQA;AAHoC,KAAf,CAAjC;AAKH;;AAED,SAASP,QAAT,CAAmBC,MAAnB,EAA2BL,WAA3B,EAAwCW,MAAxC,EAAgD;AAC5CF,YAAQC,GAAR,CAAY,mBAAZ,EAAiCC,MAAjC,EAAyC,SAAzC,EAAoDX,WAApD;AACAN,mBAAeM,WAAf,EAA4BY,IAA5B,CAAiC,yBAAe;AAC5Cf,cAAM,QADsC;AAE5CQ,gBAAQA,MAFoC;AAG5CM,gBAAQA;AAHoC,KAAf,CAAjC;AAKH;;AAED,SAASb,cAAT,CAAyBC,YAAzB,EAAuCC,WAAvC,EAAoDW,MAApD,EAA4D;AACxDF,YAAQC,GAAR,CAAY,yBAAZ,EAAuCC,MAAvC,EAA+C,SAA/C,EAA0DX,WAA1D;AACAN,mBAAeM,WAAf,EAA4BY,IAA5B,CAAiC,yBAAe;AAC5Cf,cAAM,cADsC;AAE5CE,sBAAcA,YAF8B;AAG5CY,gBAAQA;AAHoC,KAAf,CAAjC;AAKH","file":"messageHandler.js","sourcesContent":["// exporting for unit tests only\nexport const connectedPeers = {}\n\nexport default function onMessage (ws, message) {\n    var type = message.type\n    switch (type) {\n    case 'ICECandidate':\n        onICECandidate(message.ICECandidate, message.destination, ws.id)\n        break\n    case 'offer':\n        onOffer(message.offer, message.destination, ws.id)\n        break\n    case 'answer':\n        onAnswer(message.answer, message.destination, ws.id)\n        break\n    case 'init':\n        onInit(ws, message.init)\n        break\n    default:\n        throw new Error('invalid message type')\n    }\n}\n\nfunction onInit (ws, id) {\n    console.log('init from peer:', id)\n    ws.id = id\n    connectedPeers[id] = ws\n}\n\nfunction onOffer (offer, destination, source) {\n    console.log('offer from peer:', source, 'to peer', destination)\n    connectedPeers[destination].send(JSON.stringify({\n        type: 'offer',\n        offer: offer,\n        source: source\n    }))\n}\n\nfunction onAnswer (answer, destination, source) {\n    console.log('answer from peer:', source, 'to peer', destination)\n    connectedPeers[destination].send(JSON.stringify({\n        type: 'answer',\n        answer: answer,\n        source: source\n    }))\n}\n\nfunction onICECandidate (ICECandidate, destination, source) {\n    console.log('ICECandidate from peer:', source, 'to peer', destination)\n    connectedPeers[destination].send(JSON.stringify({\n        type: 'ICECandidate',\n        ICECandidate: ICECandidate,\n        source: source\n    }))\n}\n"],"sourceRoot":"/source/"}