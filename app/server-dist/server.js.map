{"version":3,"sources":["server.js"],"names":["PORT","process","env","server","wss","app","get","req","res","render","on","ws","location","parse","upgradeReq","url","console","log","message","objMessage","JSON","send","listen","address","port","NODE_ENV"],"mappings":";;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,SAAS,yBAAf;AACA,IAAMC,MAAM,eAAW,EAAED,QAAQA,MAAV,EAAX,CAAZ;;AAEA,IAAME,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIC,MAAJ;AACH,CAFD;;AAIAL,IAAIM,EAAJ,CAAO,YAAP,EAAqB,UAACC,EAAD,EAAQ;AACzB,QAAIC,WAAW,cAAIC,KAAJ,CAAUF,GAAGG,UAAH,CAAcC,GAAxB,EAA6B,IAA7B,CAAf;AACAC,YAAQC,GAAR,CAAYL,QAAZ;AACAI,YAAQC,GAAR,CAAY,0BAAZ;AACA;AACA;;AAEAN,OAAGD,EAAH,CAAM,SAAN,EAAiB,UAACQ,OAAD,EAAa;AAC1B,YAAIC,aAAaC,KAAKP,KAAL,CAAWK,OAAX,CAAjB;AACA,sCAAeP,EAAf,EAAmBQ,UAAnB;AACH,KAHD;;AAKAR,OAAGU,IAAH,CAAQ,WAAR;AACH,CAbD;;AAeAlB,OAAOO,EAAP,CAAU,SAAV,EAAqBL,GAArB;AACAF,OAAOmB,MAAP,CAActB,IAAd,EAAoB;AAAA,WAAMgB,QAAQC,GAAR,CAAY,kBAAkBd,OAAOoB,OAAP,GAAiBC,IAA/C,CAAN;AAAA,CAApB;;AAEA,IAAIvB,QAAQC,GAAR,CAAYuB,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,gCAAapB,GAAb;AACH;;AAEDW,QAAQC,GAAR,CAAY,sCAAsCjB,IAAlD","file":"server.js","sourcesContent":["import { createServer } from 'http'\nimport url from 'url'\nimport { Server } from 'ws'\nimport express from 'express'\nimport staticServer from './staticServer'\nimport messageHandler from './messageHandler'\n\nconst PORT = process.env.PORT || 8089\nconst server = createServer()\nconst wss = new Server({ server: server })\n\nconst app = express()\n\napp.get('/', (req, res) => {\n    res.render(`index.ejs`)\n})\n\nwss.on('connection', (ws) => {\n    var location = url.parse(ws.upgradeReq.url, true)\n    console.log(location)\n    console.log('connection from a client')\n    // you might use location.query.access_token to authenticate or share sessions\n    // or ws.upgradeReq.headers.cookie (see http://stackoverflow.com/a/16395220/151312)\n\n    ws.on('message', (message) => {\n        var objMessage = JSON.parse(message)\n        messageHandler(ws, objMessage)\n    })\n\n    ws.send('something')\n})\n\nserver.on('request', app)\nserver.listen(PORT, () => console.log('Listening on ' + server.address().port))\n\nif (process.env.NODE_ENV === 'production') {\n    staticServer(app)\n}\n\nconsole.log('started signaling server on port ' + PORT)\n"],"sourceRoot":"/source/"}